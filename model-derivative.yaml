openapi: 3.0.1
info:
  title: Model Derivative API
  version: '2.0'
  description: Use the Model Derivative API to translate designs from one CAD format to another.
  x-external: false
  x-error-response-bodies: true
  x-use-rst-examples: true
  x-forge-service-name: model_derivative
  termsOfService: https://www.autodesk.com/company/legal-notices-trademarks/terms-of-service-autodesk360-web-services/forge-platform-web-services-api-terms-of-service
  x-support: https://stackoverflow.com/questions/tagged/autodesk-model-derivative
  contact:
    name: Autodesk Plaform Services
    url: https://aps.autodesk.com/
    email: aps.help@autodesk.com
security:
  - 2-legged:
      - 'data:read'
      - 'data:write'
  - 3-legged:
      - 'data:read'
      - 'data:write'
servers:
  - url: 'https://developer.api.autodesk.com/modelderivative/v2'
tags:
  - name: Informational
  - name: Jobs
  - name: Manifest
  - name: Derivatives
  - name: Thumbnails
  - name: Metadata
components:
  securitySchemes:
    2-legged:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://developer.api.autodesk.com/authentication/v1/authenticate'
          scopes:
            'data:read': read your data
            'data:write': modify your data
            'data:create': create new data
            'data:search': search data
    3-legged:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://developer.api.autodesk.com/authentication/v1/authorize'
          tokenUrl: 'https://developer.api.autodesk.com/authentication/v1/gettoken'
          scopes:
            'data:read': read your data
            'data:write': modify your data
            'data:create': create new data
            'data:search': search data
    3-legged-implicit:
      description: 3-legged implicit flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://developer.api.autodesk.com/authentication/v1/authorize'
          scopes:
            'data:read': read application data
            'data:write': write application data
            'data:create': create new application data
  parameters:
    accept-encoding:
      name: Accept-Encoding
      in: header
      schema:
        type: string
      description: |
        A comma separated list of the algorthms you want the response to be encoded in, specified in the order of preference.  

        If you specify ``gzip`` or ``*``, the service uses the GZIP algorithm to encode the response.
    If-Modified-Since:
      name: If-Modified-Since
      in: header
      required: false
      schema:
        type: string
      description: 'Specifies a date in the ``Day of the week, DD Month YYYY HH:MM:SS GMT`` format. The response will contain only the formats modified since the specified date and time. If you specify an invalid date, the response will contain all supported formats. If no changes have been made after the specified date, the service returns HTTP status ``304``, NOT MODIFIED.'
    x-ads-force:
      name: x-ads-force
      in: header
      required: false
      schema:
        type: boolean
      description: 'true: force retrieve the object tree even though it failed to be retrieved or got timeout (got 404 with error message) previously. false (default): retrieve the object tree, and previously failures are not replaced.'
    x-ads-derivative-format:
      name: x-ads-derivative-format
      in: header
      required: false
      schema:
        type: string
      description: 'Specifies what Object IDs to return, if the design has legacy SVF derivatives generated by the BIM Docs service. Possible values are:  - latest - (Default) Return SVF2 Object IDs. - fallback - Return SVF Object IDs.  Note  1. This parameter applies only to designs with legacy SVF derivatives generated by the BIM 360 Docs service. 2. The BIM 360 Docs service now generates SVF2 derivatives. SVF2 Object IDs may not be compatible with the SVF Object IDs previously generated by the BIM 360 Docs service. Setting this header to fallback may resolve backward compatibility issues resulting from Object IDs of legacy SVF derivatives being retained on the client side. 3. If you use this header with one derivative (URN), you must use it consistently across the following endpoints, whenever you reference the same derivative. - POST job (for OBJ output) - GET {urn}/metadata/{modelGuid} - GET {urn}/metadata/{modelGuid}/properties'
    forceget:
      name: forceget
      in: query
      required: false
      schema:
        type: string
      description: 'true: Forcibly gets large resources even if they exceed the expected maximum size (20 MB). If the resource is larger than 800 MB, the server behaves as though forceget is false. In such a case, use the objectid query string parameter to download resources by Object ID one object at a time. Alternatively, you can use POST {urn}/metadata/{modelGuid}/properties:query to fetch only the properties you are interested in. false: (Default) Does not get resources if they exceed the expected maximum size (20 MB).'
    urn:
      name: urn
      in: path
      required: true
      schema:
        type: string
      description: The Base64 (URL Safe) encoded design URN
    modelGuid:
      name: modelGuid
      in: path
      required: true
      schema:
        type: string
      description: 'Unique model view ID. Call GET {urn}/metadata to get the ID'
    derivativeUrn:
      name: derivativeUrn
      in: path
      schema:
        type: string
      description: 'The URL-encoded URN of the derivatives. The URN is retrieved from the GET {urn}/manifest endpoint.'
      required: true
  headers:
    x-ads-startup-time:
      description: 'The service startup time with data format `EEE MMM dd HH:mm:ss Z yyyy`.'
      schema:
        type: string
    x-ads-app-identifier:
      description: 'The service identifier comprise service name, version and environment.'
      schema:
        type: string
    x-ads-duration:
      description: The request duration in milliseconds.
      schema:
        type: string
    x-ads-troubleshooting:
      description: Provides information about the server failure.
      schema:
        type: string
    x-ads-size:
      description: Size in bytes of the request data. It’s also for 413 resposne code.
      schema:
        type: string
  responses:
    400-general:
      description: The service was unable to process the request. The syntax of the request may be malformed or the request may be missing a required header. Do not resend the request without fixing the issue. The response body may indicate what is wrong with the request.
      content:
        application/json:
          schema:
            type: object
            properties:
              diagnostic:
                type: string
    401-general:
      description: The supplied authorization header was not valid or the supplied token scope was not acceptable. Verify authentication and try again.
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
    403-general:
      description: The request was successfully validated but it did not have the required permissions.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    404-general:
      description: The requested resource was not found. Check the URI of your request before you resend this request.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    412-general:
      description: The ``If-Match`` header you specified does not match the ``etag`` of the object you are updating. Resend the request using the most current value of ``etag`` as the value for the ``If-Match`` header.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    500-general:
      description: 'The service encountered an error that it was unable to handle. Wait for a few minuites and resend the request. If the error persists, contact us at ``aps.help@autodesk.com``. '
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    406-general:
      description: The request is not supported.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    409-general:
      description: The request conflicts with a previous request that is still in progress.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    413-general:
      description: The resource exceeded the expected maximum length (20 MB).
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    429-general:
      description: Rate limit exceeded (60 requests per minute for force getting or 300 requests per minute for requests that trigger metadata extraction). Wait some time before retrying.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
  schemas:
    Formats:
      description: 'Returns an up-to-date list of supported translations, which you can use to identify which types of derivatives are supported for each source file type'
      type: object
      x-examples:
        example-1:
          formats:
            dwg:
              - f2d
              - f3d
              - rvt
            fbx:
              - f3d
            ifc:
              - rvt
            iges:
              - f3d
              - fbx
              - iam
              - ipt
              - wire
            obj:
              - asm
              - f3d
              - fbx
              - iam
              - ipt
              - neu
              - prt
              - sldasm
              - sldprt
              - smb
              - smt
              - step
              - stp
              - stpz
              - wire
              - x_b
              - x_t
              - asm\.\d+$
              - neu\.\d+$
              - prt\.\d+$
            step:
              - f3d
              - fbx
              - iam
              - ipt
              - smb
              - smt
              - wire
            stl:
              - f3d
              - fbx
              - iam
              - ipt
              - wire
            svf:
              - 3dm
              - 3ds
              - a
              - asm
              - axm
              - brd
              - catpart
              - catproduct
              - cgr
              - collaboration
              - dae
              - ddx
              - ddz
              - dgk
              - dgn
              - dlv3
              - dmt
              - dwf
              - dwfx
              - dwg
              - dwt
              - dxf
              - emodel
              - exp
              - f3d
              - fbrd
              - fbx
              - fsch
              - g
              - gbxml
              - glb
              - gltf
              - iam
              - idw
              - ifc
              - ifw
              - ige
              - iges
              - igs
              - ipt
              - iwm
              - jt
              - max
              - model
              - mpf
              - msr
              - neu
              - nwc
              - nwd
              - obj
              - osb
              - par
              - pdf
              - pmlprj
              - pmlprjz
              - prt
              - psm
              - psmodel
              - rcp
              - rvt
              - sab
              - sat
              - sch
              - session
              - skp
              - sldasm
              - sldprt
              - smb
              - smt
              - ste
              - step
              - stl
              - stla
              - stlb
              - stp
              - stpz
              - vpb
              - vue
              - wire
              - x_b
              - x_t
              - xas
              - xpr
              - zip
              - asm\.\d+$
              - neu\.\d+$
              - prt\.\d+$
            svf2:
              - 3dm
              - 3ds
              - a
              - asm
              - axm
              - brd
              - catpart
              - catproduct
              - cgr
              - collaboration
              - dae
              - ddx
              - ddz
              - dgk
              - dgn
              - dlv3
              - dmt
              - dwf
              - dwfx
              - dwg
              - dwt
              - dxf
              - emodel
              - exp
              - f3d
              - fbrd
              - fbx
              - fsch
              - g
              - gbxml
              - glb
              - gltf
              - iam
              - idw
              - ifc
              - ifw
              - ige
              - iges
              - igs
              - ipt
              - iwm
              - jt
              - max
              - model
              - mpf
              - msr
              - neu
              - nwc
              - nwd
              - obj
              - osb
              - par
              - pdf
              - pmlprj
              - pmlprjz
              - prt
              - psm
              - psmodel
              - rcp
              - rvt
              - sab
              - sat
              - sch
              - session
              - skp
              - sldasm
              - sldprt
              - smb
              - smt
              - ste
              - step
              - stl
              - stla
              - stlb
              - stp
              - stpz
              - vpb
              - vue
              - wire
              - x_b
              - x_t
              - xas
              - xpr
              - zip
              - asm\.\d+$
              - neu\.\d+$
              - prt\.\d+$
            thumbnail:
              - 3dm
              - 3ds
              - a
              - asm
              - axm
              - axmf
              - brd
              - catpart
              - catproduct
              - cgr
              - collaboration
              - dae
              - ddx
              - ddz
              - dgk
              - dgn
              - dlv3
              - dmt
              - dwf
              - dwfx
              - dwg
              - dwgx
              - dwt
              - dxf
              - emodel
              - exp
              - f2d
              - f3d
              - fbrd
              - fbx
              - flbr
              - fprj
              - fsch
              - g
              - gbxml
              - glb
              - gltf
              - iam
              - idw
              - ifc
              - ifw
              - ige
              - iges
              - igs
              - ipt
              - iwm
              - jt
              - max
              - model
              - mpf
              - msr
              - neu
              - nwc
              - nwd
              - obj
              - osb
              - par
              - pdf
              - pmlprj
              - pmlprjz
              - prt
              - psm
              - psmodel
              - rcp
              - rva
              - rvt
              - sab
              - sat
              - sch
              - session
              - skp
              - sldasm
              - sldprt
              - smb
              - smt
              - ste
              - step
              - stl
              - stla
              - stlb
              - stp
              - stpz
              - vpb
              - vue
              - wire
              - x_b
              - x_t
              - xas
              - xpr
              - zip
              - asm\.\d+$
              - neu\.\d+$
              - prt\.\d+$
      properties:
        key:
          type: string
        value:
          type: array
          items:
            type: string
      title: ''
    ObjectTree:
      description: ''
      type: object
      x-examples:
        example-1:
          data:
            type: objects
            objects:
              - objectid: 1
                name: A5
                objects:
                  - objectid: 2
                    name: Model
                    objects:
                      - objectid: 3
                        name: Bottom
                        objects:
                          - objectid: 4
                            name: Box
                      - objectid: 5
                        name: Pillar
                        objects:
                          - objectid: 6
                            name: Cylinder
                      - objectid: 7
                        name: Top
                        objects:
                          - objectid: 8
                            name: Box
      properties:
        data:
          type: object
          required:
            - type
            - objects
          properties:
            type:
              type: string
              minLength: 1
            objects:
              type: array
              uniqueItems: true
              minItems: 1
              items:
                type: object
                properties:
                  objectid:
                    type: number
                  name:
                    type: string
                    minLength: 1
                  objects:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        objectid:
                          type: number
                        name:
                          type: string
                          minLength: 1
                        objects:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            type: object
                            properties:
                              objectid:
                                type: number
                              name:
                                type: string
                                minLength: 1
                              objects:
                                type: array
                                uniqueItems: true
                                minItems: 1
                                items:
                                  type: object
                                  properties:
                                    objectid:
                                      type: number
                                    name:
                                      type: string
                                      minLength: 1
                                  required:
                                    - objectid
                                    - name
                            required:
                              - objectid
                              - name
                      required:
                        - objectid
                        - name
                required:
                  - objectid
                  - name
      required:
        - data
    ModelViews:
      description: ''
      type: object
      x-examples:
        example-1:
          data:
            type: metadata
            metadata:
              - name: NAVISWORKS/IFC EXPORT
                role: 3d
                guid: 04b9a71d-9015-0a7b-338b-8522a705a8d7
              - name: New Construction
                role: 3d
                guid: 1d6e48c5-e4a4-8ca5-5b02-3f2acc354470
                isMasterView: true
              - name: 001 - 4128-AA-DC-681100**_IS01
                role: 2d
                guid: eea006f7-042b-c298-d497-9ef4047e8378
      properties:
        data:
          type: object
          description: Envelope that contains the return data.
          required:
            - type
            - metadata
          properties:
            type:
              type: string
              minLength: 1
              description: The type of data that is returned.
            metadata:
              type: array
              uniqueItems: true
              minItems: 1
              items:
                type: object
                description: An array of flat JSON objects representing metadata.
                properties:
                  name:
                    type: string
                    minLength: 1
                    description: Name of the model view
                  guid:
                    type: string
                    minLength: 1
                    description: Unique identifier for the model view
                  role:
                    type: string
                    minLength: 1
                    enum:
                      - 2d
                      - 3d
                    description: |-
                      Type of model view
                      Possible values: 2d, 3d
                  isMasterView:
                    type: boolean
                    description: |-
                      Indicates whether the model view is a Master View. This attribute is present only if the model view is a Master View. Possible values:
                      true: Model View is a Master View derived from a Revit file.
                required:
                  - name
                  - guid
                  - role
                  - isMasterView
      required:
        - data
    AllProperties:
      description: ''
      type: object
      x-examples:
        example-1:
          data:
            type: properties
            collection:
              - objectid: 1
                name: A5
                externalId: mou0zG8ViUOsqUzhb4TUiA
                properties:
                  Name: A5
              - objectid: 2
                name: Model
                externalId: z4u0zG8ViUOsqUzhb4TUiA
                properties:
                  Component Name: Model
                  Name: Model
                  Design Tracking Properties:
                    Design State: WorkInProgress
                    Designer: ADSK
                    File Subtype: Assembly
                  File Properties:
                    Author: ADSK
                    Creation Date: '2012-Jul-09 20:18:20'
                    Original System: Autodesk Inventor 2017
                    Part Number: Model
                  Mass Properties:
                    Area: 19772.676 millimeter^2
                    Volume: 83673.946 millimeter^3
              - objectid: 3
                name: Bottom
                externalId: 0Yu0zG8ViUOsqUzhb4TUiA
                properties:
                  Component Name: A5-P1
                  Name: Bottom
                  Design Tracking Properties:
                    Design State: WorkInProgress
                    Designer: ADSK
                    File Subtype: Modeling
                  File Properties:
                    Author: ADSK
                    Creation Date: '2012-Jul-09 20:18:35'
                    Original System: Autodesk Inventor 2017
                    Part Number: Bottom
                  Mass Properties:
                    Area: 7000 millimeter^2
                    Volume: 25000 millimeter^3
              - objectid: 4
                name: Box
                externalId: 1Iu0zG8ViUOsqUzhb4TUiA
                properties:
                  'Center of Gravity:': '-13.452 mm, -9.879 mm, -40.735 mm'
                  Name: Box
              - objectid: 5
                name: Pillar
                externalId: 1ou0zG8ViUOsqUzhb4TUiA
                properties:
                  Component Name: Pillar
                  Name: Pillar
                  Design Tracking Properties:
                    Design State: WorkInProgress
                    Designer: ADSK
                    File Subtype: Modeling
                  File Properties:
                    Author: ADSK
                    Creation Date: '2012-Jul-09 20:18:35'
                    Original System: Autodesk Inventor 2017
                    Part Number: Pillar
                  Mass Properties:
                    Area: 7000 millimeter^2
                    Volume: 25000 millimeter^3
              - objectid: 6
                name: Cylinder
                externalId: 2Iu0zG8ViUOsqUzhb4TUiA
                properties:
                  'Mass:': 0.012 gram
                  Name: Cylinder
              - objectid: 7
                name: Top
                externalId: 2ou0zG8ViUOsqUzhb4TUiA
                properties:
                  Component Name: Top
                  Name: Top
                  Design Tracking Properties:
                    Design State: WorkInProgress
                    Designer: ADSK
                    File Subtype: Modeling
                  File Properties:
                    Author: ADSK
                    Creation Date: '2012-Jul-09 20:19:38'
                    Original System: Autodesk Inventor 2017
                    Part Number: Top
                  Mass Properties:
                    Area: 5772.676 millimeter^2
                    Volume: 33673.946 millimeter^3
              - objectid: 8
                name: Box
                externalId: 3Iu0zG8ViUOsqUzhb4TUiA
                properties:
                  Material: ABS Plastic
                  Name: Box
      properties:
        data:
          type: object
          required:
            - type
            - collection
          properties:
            type:
              type: string
              minLength: 1
            collection:
              type: array
              uniqueItems: true
              minItems: 1
              items:
                type: object
                properties:
                  objectid:
                    type: number
                  name:
                    type: string
                    minLength: 1
                  externalId:
                    type: string
                    minLength: 1
                  properties:
                    type: object
                required:
                  - objectid
                  - name
                  - externalId
      required:
        - data
    SpecificProperties:
      description: ''
      type: object
      x-examples:
        example-1:
          pagination:
            limit: 20
            offset: 0
            totalResults: 2
          data:
            type: properties
            collection:
              - objectid: 438
                name: 'Floor [418183]'
                externalId: d85573c2-f8d5-46ae-966a-ac82fa18f500-00066187
                properties:
                  Constraints:
                    Level: Level 2
                    Height Offset From Level: 0.000 mm
                    Room Bounding: 'Yes'
                    Related to Mass: 'No'
                  Construction:
                    Structure: ''
                    Default Thickness: 300.000 mm
                    Function: Interior
              - objectid: 4269
                name: Generic 150mm
                externalId: e3e052f9-0156-11d5-9301-0000863f27ad-00000153
                properties:
                  Construction:
                    Structure: ''
                    Default Thickness: 150.000 mm
                    Function: Interior
      properties:
        pagination:
          type: object
          required:
            - limit
            - offset
            - totalResults
          properties:
            limit:
              type: number
            offset:
              type: number
            totalResults:
              type: number
        data:
          type: object
          required:
            - type
            - collection
          properties:
            type:
              type: string
              minLength: 1
            collection:
              type: array
              uniqueItems: true
              minItems: 1
              items:
                type: object
                properties:
                  objectid:
                    type: number
                  name:
                    type: string
                    minLength: 1
                  externalId:
                    type: string
                    minLength: 1
                  properties:
                    type: object
                required:
                  - objectid
                  - name
                  - externalId
      required:
        - pagination
        - data
      title: ''
    SpecificPropertiesPayload:
      description: ''
      type: object
      x-examples:
        example-1:
          query:
            $in:
              - objectid
              - 4269
              - 438
          fields:
            - objectid
            - name
            - externalId
            - properties.Cons*
          pagination:
            offset: 0
            limit: 20
          payload: text
      properties:
        pagination:
          type: object
          required:
            - offset
            - limit
          properties:
            offset:
              type: number
            limit:
              type: number
        query:
          oneOf:
            - properties:
                $in:
                  type: array
                  items: {}
            - properties:
                $prefix:
                  type: array
                  items: {}
            - properties:
                $eq:
                  type: array
                  items: {}
            - properties:
                $between:
                  type: array
                  items: {}
            - properties:
                $le:
                  type: array
                  items: {}
            - properties:
                $ge:
                  type: array
                  items: {}
            - properties:
                $contains:
                  type: array
                  items: {}
          type: object
        fields:
          type: object
        payload:
          type: string
          minLength: 1
          enum:
            - text
            - unit
      required:
        - pagination
        - query
        - fields
        - payload
    Manifest:
      description: ''
      type: object
      x-examples:
        example-1:
          urn: dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0
          derivatives:
            - hasThumbnail: 'true'
              children:
                - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/Resource/model.sdb'
                  role: Autodesk.CloudPlatform.PropertyDatabase
                  mime: application/autodesk-db
                  guid: 6fac95cb-af5d-3e4f-b943-8a7f55847ff1
                  type: resource
                  status: success
                - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/Resource/AECModelData.json'
                  role: Autodesk.AEC.ModelData
                  mime: application/json
                  guid: a4aac952-a3f4-031c-4113-b2d9ac2d0de6
                  type: resource
                  status: success
                - phaseNames: New Construction
                  role: 3d
                  hasThumbnail: 'true'
                  children:
                    - guid: 92b5dec7-790a-45b0-a5e8-cd9f76058c3a-0004bdc0
                      type: view
                      role: 3d
                      name: 3D
                      status: success
                      progress: complete
                      camera:
                        - 63.460731506347656
                        - -69.05099487304688
                        - 85.06072235107422
                        - -12.099991798400879
                        - 6.50972843170166
                        - 9.5
                        - -0.40824830532073975
                        - 0.40824830532073975
                        - 0.8164966106414795
                        - 1.3879648447036743
                        - 0
                        - 1
                        - 1
                    - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/Resource/3D View/3D/3D1.png'
                      role: thumbnail
                      mime: image/png
                      guid: c70aa596-d404-714f-6795-9276087c3800
                      type: resource
                      resolution:
                        - 100
                        - 100
                      status: success
                    - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/Resource/3D View/3D/3D2.png'
                      role: thumbnail
                      mime: image/png
                      guid: 6ef65d1a-4a59-111d-f1ec-4e543bd2712b
                      type: resource
                      resolution:
                        - 200
                        - 200
                      status: success
                    - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/Resource/3D View/3D/3D4.png'
                      role: thumbnail
                      mime: image/png
                      guid: 2c06739e-5164-4f6d-450e-c8833fd2a2ba
                      type: resource
                      resolution:
                        - 400
                        - 400
                      status: success
                    - role: graphics
                      mime: application/autodesk-svf2
                      guid: 1821b502-b91e-f9f2-56e9-2d7cb4b0f4a3
                      type: resource
                  name: 3D
                  guid: 02efa4e8-11ec-5b90-1c0b-4775bad24b58
                  progress: complete
                  type: geometry
                  viewableID: 92b5dec7-790a-45b0-a5e8-cd9f76058c3a-0004bdc0
                  status: success
              name: Link Arc_2018.rvt
              progress: complete
              outputType: svf2
              status: success
            - children:
                - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/preview1.png'
                  role: thumbnail
                  mime: image/png
                  guid: db899ab5-939f-e250-d79d-2d1637ce4565
                  type: resource
                  resolution:
                    - 100
                    - 100
                  status: success
                - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/preview2.png'
                  role: thumbnail
                  mime: image/png
                  guid: 3f6c118d-f551-7bf0-03c9-8548d26c9772
                  type: resource
                  resolution:
                    - 200
                    - 200
                  status: success
                - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/preview4.png'
                  role: thumbnail
                  mime: image/png
                  guid: 4e751806-0920-ce32-e9fd-47c3cec21536
                  type: resource
                  resolution:
                    - 400
                    - 400
                  status: success
              progress: complete
              outputType: thumbnail
              status: success
          hasThumbnail: 'true'
          progress: complete
          type: manifest
          region: US
          version: '1.0'
          status: success
      properties:
        urn:
          type: string
          minLength: 1
        derivatives:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              hasThumbnail:
                type: string
                minLength: 1
              children:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    phaseNames:
                      type: string
                      minLength: 1
                    role:
                      type: string
                      minLength: 1
                    hasThumbnail:
                      type: string
                      minLength: 1
                    children:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        type: object
                        properties:
                          guid:
                            type: string
                            minLength: 1
                          type:
                            type: string
                            minLength: 1
                          role:
                            type: string
                            minLength: 1
                          name:
                            type: string
                            minLength: 1
                          status:
                            type: string
                            minLength: 1
                          progress:
                            type: string
                            minLength: 1
                          camera:
                            type: array
                            items:
                              type: object
                        required:
                          - guid
                          - type
                          - role
                          - name
                          - status
                          - progress
                    name:
                      type: string
                      minLength: 1
                    guid:
                      type: string
                      minLength: 1
                    progress:
                      type: string
                      minLength: 1
                    type:
                      type: string
                      minLength: 1
                    viewableID:
                      type: string
                      minLength: 1
                    status:
                      type: string
                      minLength: 1
                  required:
                    - phaseNames
                    - role
                    - hasThumbnail
                    - name
                    - guid
                    - progress
                    - type
                    - viewableID
                    - status
              name:
                type: string
                minLength: 1
              progress:
                type: string
                minLength: 1
              outputType:
                type: string
                minLength: 1
              status:
                type: string
                minLength: 1
            required:
              - hasThumbnail
              - name
              - progress
              - outputType
              - status
        hasThumbnail:
          type: string
          minLength: 1
        progress:
          type: string
          minLength: 1
        type:
          type: string
          minLength: 1
        region:
          type: string
          minLength: 1
        version:
          type: string
          minLength: 1
        status:
          type: string
          minLength: 1
      required:
        - urn
        - derivatives
        - hasThumbnail
        - progress
        - type
        - region
        - version
        - status
    JobPayload:
      type: object
      title: ''
      description: ''
      properties:
        input:
          type: object
          description: Group of inputs
          required:
            - urn
          properties:
            urn:
              type: string
              description: |
                The design URN; returned when uploading the file to Forge The URN needs to be [Base64 (URL Safe) encoded](https://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/job-POST/#id3).
            compressedUrn:
              type: boolean
              description: 'Set this to `true` if the source file is compressed. If set to `true`, you need to define the `rootFilename`.'
              default: false
            rootFilename:
              type: string
              description: The root filename of the compressed file. Mandatory if the `compressedUrn` is set to `true`.
            checkReferences:
              type: boolean
              description: |-
                - true - Instructs the server to check for references and download all referenced files. If the design consists of multiple files (as with Autodesk Inventor assemblies) the translation fails if this attribute is not set to true.
                - false - (Default) Does not check for any references.
        output:
          type: object
          description: Group of outputs
          required:
            - formats
          properties:
            destination:
              type: object
              properties:
                region:
                  type: string
            formats:
              type: array
              description: Group of requested formats/types. User can request multiple formats.
              items:
                $ref: '#/components/schemas/JobPayloadFormat'
        misc:
          type: object
          properties:
            workflow:
              type: string
              description: 'The workflow id created for a webhook, used to listen to Model Derivative events. It needs to be no more than 36 chars, and only ASCII, decimal and hyphen are accepted.'
            workflowAttribute:
              type: object
              description: 'A user-defined JSON object, which you can use to set some custom workflow information. It needs to be less than 1KB and will be ignored if misc.workflow parameter is not set.'
      required:
        - input
        - output
    JobPayloadFormat:
      description: 'Output description object, depends of the type'
      allOf:
        - $ref: '#/components/schemas/JobSvfOutputFormat'
        - $ref: '#/components/schemas/JobSvf2OutputFormat'
        - $ref: '#/components/schemas/JobThumbnailOutputFormat'
        - $ref: '#/components/schemas/JobStlOutputFormat'
        - $ref: '#/components/schemas/JobStepOutputFormat'
        - $ref: '#/components/schemas/JobIgesOutputFormat'
        - $ref: '#/components/schemas/JobObjOutputFormat'
        - $ref: '#/components/schemas/JobDwgOutputFormat'
        - $ref: '#/components/schemas/JobIfcOutputFormat'
      title: ''
    JobSvfOutputFormat:
      type: object
      properties:
        views:
          type: array
          items:
            type: string
            description: Required options for SVF type. Possible values are `2d` and `3d`.
            enum:
              - 2d
              - 3d
        type:
          type: string
        advanced:
          type: object
          properties:
            requestedLinkageIDs:
              type: array
              description: An array containing user data linkage IDs of the linkage data to be extracted from the DGN file. Linkage data is not extracted if you do not specify this attribute.
              items:
                type: integer
            2dviews:
              type: string
              description: |-
                The format that 2D views must be rendered to. Available options are:

                - legacy - (Default) Render to a model derivative specific file format.
                - pdf - Render to the PDF file format. This option applies only to Revit 2022 files and newer.
              enum:
                - legacy
                - pdf
            conversionMethod:
              type: string
              enum:
                - legacy
                - modern
                - v3
              description: |-
                Specifies what IFC loader to use during translation. Available options are:
                - legacy - Use the Navisworks IFC loader.
                - modern - Use the Revit IFC loader (recommended over the legacy option).
                - v3 - Use the newer Revit IFC loader (recommended over the older modern option)
                If both switchLoader and conversionMethod are specified, Model Derivative uses the conversionMethod parameter. If conversionMethod is not specified, Model Derivative uses the switchLoader parameter.
            buildingStoreys:
              type: string
              description: |-
                Specifies how storeys are translated. Available options are:
                - hide - (default) storeys are extracted but not visible by default.
                - show - storeys are extracted and are visible by default.
                - skip - storeys are not translated.
                Note These options are applicable only when conversionMethod is set to modern or v3.
              enum:
                - hide
                - show
                - skip
            spaces:
              type: string
              description: |-
                Specifies how spaces are translated. Available options are:
                - hide - (default) spaces are translated but are not visible by default.
                - show - spaces are translated and are visible by default.
                - skip - spaces are not translated.
                Note These options are applicable only when conversionMethod is set to modern or v3.
              enum:
                - hide
                - show
                - skip
            openingElements:
              type: string
              description: |
                An option to be specified when the input file type is IFC.
                Specifies how openings are translated. Available options are:
                - hide - (default) openings are translated but are not visible by default.
                - show - openings are translated and are visible by default.
                - skip - openings are not translated.
                Note These options are applicable only when conversionMethod is set to modern or v3.
              enum:
                - hide
                - show
                - skip
            hiddenObjects:
              type: boolean
              description: |
                Specifies whether hidden objects must be extracted or not.
                true: Extract hidden objects from the input file.
                false: (Default) Do not extract hidden objects from the input file.
            basicMaterialProperties:
              type: boolean
              description: |
                Specifies whether basic material properties must be extracted or not.
                true: Extract properties for basic materials.
                false: (Default) Do not extract properties for basic materials.
            autodeskMaterialProperties:
              type: boolean
              description: |-
                Specifies how to handle Autodesk material properties.
                true: Extract properties for Autodesk materials.
                false: (Default) Do not extract properties for Autodesk materials.
            timelinerProperties:
              type: boolean
              description: |-
                Specifies whether timeliner properties must be extracted or not.
                true: Extract timeliner properties.
                false: (Default) Do not extract timeliner properties.
            extractorVersion:
              type: string
              description: |-
                Specifies what version of the Revit translator/extractor to use. Possible values:
                next - Makes the translation job use the newest available version of the translator/extractor. This option is meant to be used by beta testers who wish to test a pre-release version of the translator. If no pre-release version is available, this option makes the translation job use the current official release version.
                previous - Makes the translation job use the previous official release version of the translator/extractor. This option is meant to be used as a workaround in case of regressions caused by a new official release of the translator/extractor.
                If this attribute is not specified, the system uses the current official release version.
              enum:
                - next
                - previous
            generateMasterViews:
              type: boolean
              description: |-
                Generates master views when translating from the Revit input format to SVF. This option is ignored for all other input formats. This attribute defaults to false.

                Master views are 3D views that are generated for each phase of the Revit model. A master view contains all elements (including “room” elements) present in the host model for that phase. The display name of a master view defaults to the name of the phase it is generated from. However, if a view with that name already exists, the Model Derivative service appends a suffix to the default display name.

                Notes:
                1. Master views do not contain elements from linked models.
                2. Enabling this option can increase the time it takes to translate the model.
            materialMode:
              type: string
              description: |-
                Specifies the materials to apply to the generated SVF derivatives. Available options are:
                - auto - (Default) Use the current setting of the default view of the input file.
                - basic - Use basic materials.
                - autodesk - Use Autodesk materials.
              enum:
                - auto
                - basic
                - autodesk
            hierarchy:
              type: string
              description: |-
                Specifies how the hierarchy of items are determined.
                Classic: (Default) Uses hardcoded rules to set the hierarchy of items.
                SystemPath: Uses a linked XML or MDB2 properties file to set hierarchy of items. You can use this option to make the organization of items consistent with SmartPlant 3D.

                Notes:
                1. The functioning of the SystemPath depends on the default setting of the property SP3D_SystemPath or System Path.
                2. The pathing delimiter must be \.
                3. If you want to customize further, import the VUE file to Navisworks. After that, use POST job on the resulting Navisworks (nwc/nwd) file.
              enum:
                - Classic
                - SystemPath
    JobSvf2OutputFormat:
      type: object
      properties:
        views:
          type: array
          items:
            type: string
            description: Required options for SVF type. Possible values are `2d` and `3d`.
            enum:
              - 2d
              - 3d
        type:
          type: string
        advanced:
          type: object
          properties:
            requestedLinkageIDs:
              type: array
              description: An array containing user data linkage IDs of the linkage data to be extracted from the DGN file. Linkage data is not extracted if you do not specify this attribute.
              items:
                type: integer
            2dviews:
              type: string
              description: |-
                The format that 2D views must be rendered to. Available options are:

                - legacy - (Default) Render to a model derivative specific file format.
                - pdf - Render to the PDF file format. This option applies only to Revit 2022 files and newer.
              enum:
                - legacy
                - pdf
            conversionMethod:
              type: string
              enum:
                - legacy
                - modern
                - v3
              description: |-
                Specifies what IFC loader to use during translation. Available options are:
                - legacy - Use the Navisworks IFC loader.
                - modern - Use the Revit IFC loader (recommended over the legacy option).
                - v3 - Use the newer Revit IFC loader (recommended over the older modern option)
                If both switchLoader and conversionMethod are specified, Model Derivative uses the conversionMethod parameter. If conversionMethod is not specified, Model Derivative uses the switchLoader parameter.
            buildingStoreys:
              type: string
              description: |-
                Specifies how storeys are translated. Available options are:
                - hide - (default) storeys are extracted but not visible by default.
                - show - storeys are extracted and are visible by default.
                - skip - storeys are not translated.
                Note These options are applicable only when conversionMethod is set to modern or v3.
              enum:
                - hide
                - show
                - skip
            spaces:
              type: string
              description: |-
                Specifies how spaces are translated. Available options are:
                - hide - (default) spaces are translated but are not visible by default.
                - show - spaces are translated and are visible by default.
                - skip - spaces are not translated.
                Note These options are applicable only when conversionMethod is set to modern or v3.
              enum:
                - hide
                - show
                - skip
            openingElements:
              type: string
              description: |
                An option to be specified when the input file type is IFC.
                Specifies how openings are translated. Available options are:
                - hide - (default) openings are translated but are not visible by default.
                - show - openings are translated and are visible by default.
                - skip - openings are not translated.
                Note These options are applicable only when conversionMethod is set to modern or v3.
              enum:
                - hide
                - show
                - skip
            hiddenObjects:
              type: boolean
              description: |
                Specifies whether hidden objects must be extracted or not.
                true: Extract hidden objects from the input file.
                false: (Default) Do not extract hidden objects from the input file.
            basicMaterialProperties:
              type: boolean
              description: |
                Specifies whether basic material properties must be extracted or not.
                true: Extract properties for basic materials.
                false: (Default) Do not extract properties for basic materials.
            autodeskMaterialProperties:
              type: boolean
              description: |-
                Specifies how to handle Autodesk material properties.
                true: Extract properties for Autodesk materials.
                false: (Default) Do not extract properties for Autodesk materials.
            timelinerProperties:
              type: boolean
              description: |-
                Specifies whether timeliner properties must be extracted or not.
                true: Extract timeliner properties.
                false: (Default) Do not extract timeliner properties.
            extractorVersion:
              type: string
              description: |-
                Specifies what version of the Revit translator/extractor to use. Possible values:
                next - Makes the translation job use the newest available version of the translator/extractor. This option is meant to be used by beta testers who wish to test a pre-release version of the translator. If no pre-release version is available, this option makes the translation job use the current official release version.
                previous - Makes the translation job use the previous official release version of the translator/extractor. This option is meant to be used as a workaround in case of regressions caused by a new official release of the translator/extractor.
                If this attribute is not specified, the system uses the current official release version.
              enum:
                - next
                - previous
            generateMasterViews:
              type: boolean
              description: |-
                Generates master views when translating from the Revit input format to SVF. This option is ignored for all other input formats. This attribute defaults to false.

                Master views are 3D views that are generated for each phase of the Revit model. A master view contains all elements (including “room” elements) present in the host model for that phase. The display name of a master view defaults to the name of the phase it is generated from. However, if a view with that name already exists, the Model Derivative service appends a suffix to the default display name.

                Notes:
                1. Master views do not contain elements from linked models.
                2. Enabling this option can increase the time it takes to translate the model.
            materialMode:
              type: string
              description: |-
                Specifies the materials to apply to the generated SVF derivatives. Available options are:
                - auto - (Default) Use the current setting of the default view of the input file.
                - basic - Use basic materials.
                - autodesk - Use Autodesk materials.
              enum:
                - auto
                - basic
                - autodesk
            hierarchy:
              type: string
              description: |-
                Specifies how the hierarchy of items are determined.
                Classic: (Default) Uses hardcoded rules to set the hierarchy of items.
                SystemPath: Uses a linked XML or MDB2 properties file to set hierarchy of items. You can use this option to make the organization of items consistent with SmartPlant 3D.

                Notes:
                1. The functioning of the SystemPath depends on the default setting of the property SP3D_SystemPath or System Path.
                2. The pathing delimiter must be \.
                3. If you want to customize further, import the VUE file to Navisworks. After that, use POST job on the resulting Navisworks (nwc/nwd) file.
              enum:
                - Classic
                - SystemPath
    JobThumbnailOutputFormat:
      type: object
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for `thumbnail` type.
          properties:
            width:
              type: integer
              description: 'Set the width. Possible values are `100`, `200` and `400`.'
              enum:
                - 100
                - 200
                - 400
            height:
              type: integer
              description: 'Set the height. Possible values are `100`, `200` and `400`.'
              enum:
                - 100
                - 200
                - 400
    JobStlOutputFormat:
      type: object
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for `stl` type.
          properties:
            format:
              type: string
              description: Default format is `binary`. Possible values are `binary` or `ascii`.
              default: binary
              enum:
                - binary
                - ascii
            exportColor:
              type: boolean
              description: 'Color is exported by default. If set to `true`, color is exported. If set to `false`, color is not exported.'
              default: true
            exportFileStructure:
              type: string
              description: |
                `single` (default): creates one STL file for all the input files (assembly file)

                `multiple`: creates a separate STL file for each object
              default: single
              enum:
                - single
                - multiple
    JobStepOutputFormat:
      type: object
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for `step` type.
          properties:
            applicationProtocol:
              type: string
              description: |
                A STEP file can be generated with the following Application Protocols: `203` for configuration controlled design, `214` for core data for automotive mechanical design processes, `242` for managed model based 3D engineering. By default, `214` will be exported.
              default: '214'
              enum:
                - '203'
                - '214'
                - '242'
            tolerance:
              type: number
              description: Possible values are between `0` and `1`. By default it is set at 0.001.
              format: float
              default: 0.001
    JobIgesOutputFormat:
      type: object
      x-examples:
        example-1:
          type: svf
          advanced:
            tolerance: 0.001
            surfaceType: bounded
            sheetType: surface
            solidType: solid
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for `iges` type.
          properties:
            tolerance:
              type: number
              description: Possible values are between `0` and `1`. By default it is set at 0.001.
              format: float
              default: 0.001
            surfaceType:
              type: string
              description: 'Possible values are `bounded`, `trimmed` and `wireframe`. By default it is set to bounded surface.'
              default: bounded
              enum:
                - bounded
                - trimmed
                - wireframe
            sheetType:
              type: string
              description: 'Export the sheet body to IGES. `open`, `shell`, `surface` or `wireframe`. By default, it is set to `surface`.'
              default: surface
              enum:
                - open
                - surface
                - shell
                - wireframe
            solidType:
              type: string
              description: 'Export the solid body to IGES `solid`, `surface` or `wireframe`. By default, it is set to `solid`.'
              default: solid
              enum:
                - solid
                - surface
                - wireframe
    JobObjOutputFormat:
      type: object
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for `obj` type.
          properties:
            exportFileStructure:
              type: string
              description: |
                `single` (default): creates one OBJ file for all the input files (assembly file)

                `multiple`: creates a separate OBJ file for each object
              default: single
              enum:
                - single
                - multiple
            unit:
              type: string
              description: |-
                Translate models into different units; this causes the values to change. For example, from millimeters (10, 123, 31) to centimeters (1.0, 12.3, 3.1). If the source unit or the unit you are translating into is not supported, the values remain unchanged.
                Possible values:
                meter, decimeter, centimeter, millimeter, micrometer, nanometer
                yard, foot, inch, mil, microinch
                Note that this feature does not support F3D files.
              enum:
                - meter
                - decimeter
                - centimeter
                - millimeter
                - micrometer
                - nanometer
                - yard
                - foot
                - inch
                - mil
                - microinch
            modelGuid:
              type: string
              description: Required for geometry extractions. The model view ID (guid).
            objectIds:
              type: array
              description: |
                Required for geometry extractions. List object ids to be translated. -1 will extract the entire model.
              items:
                type: integer
    JobDwgOutputFormat:
      type: object
      x-examples:
        example-1:
          type: svf
          views:
            - 2d
      description: A JSON object representing the requested output types.
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for dwg output type.
          properties:
            exportSettingName:
              type: string
              description: The export settings should be one of the DWG Export settings name pre-saved in the document.
    JobIfcOutputFormat:
      type: object
      x-examples:
        example-1:
          type: svf
          views:
            - 2d
      description: A JSON object representing the requested output types.
      properties:
        type:
          type: string
        advanced:
          type: object
          description: exportSettingName
          properties:
            exportSettingName:
              type: string
              description: The export settings should be one of the IFC Export settings pre-saved in the document.
    Job:
      required:
        - acceptedJobs
        - result
        - urn
      type: object
      properties:
        result:
          type: string
          description: reporting success status
        urn:
          type: string
          description: the urn identifier of the source file
        acceptedJobs:
          required:
            - output
          type: object
          properties:
            output:
              type: object
              properties: {}
              description: identical to the request body. For more information please see the request body structure above.
          description: list of the requested outputs
  requestBodies: {}
paths:
  /designdata/formats:
    get:
      summary: List Supported Formats
      tags:
        - Informational
      responses:
        '200':
          description: 'A list of supported formats was successfully returned. '
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
            Last-Modified:
              schema:
                type: string
              description: '''Indicates the date and time (in ``Day of the week, DD Month YYYY HH:MM:SS GMT`` format) the supported formats were last modified.'''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formats'
        '304':
          description: Supported formats have not changed since the date specified by the ``If-Modified-Since`` header.
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: formats
      description: |-
        Returns an up-to-date list of supported translations. You can use to this list to find out what derivatives are supported by each source file type. You can set options to return the list of supported translations only if they have been updated since a specified date.

        See the `Supported Translation Formats table </en/docs/model-derivative/v2/overview/supported-translations>`_ for more details about supported translations.

        **Note:** We keep adding new file formats to our supported translations list, constantly.
      parameters:
        - schema:
            type: string
          in: header
          name: If-Modified-Since
          description: 'Specifies a date in the ``Day of the week, DD Month YYYY HH:MM:SS GMT`` format. The response will contain only the formats modified since the specified date and time. If you specify an invalid date, the response will contain all supported formats. If no changes have been made after the specified date, the service returns HTTP status ``304``, NOT MODIFIED.'
        - $ref: '#/components/parameters/accept-encoding'
      security:
        - 2-legged: []
        - 3-legged: []
        - 3-legged-implicit: []
    parameters: []
  '/designdata/{urn}/metadata':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
    get:
      summary: List Model Views
      tags:
        - Metadata
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelViews'
            application/xml:
              schema:
                type: object
                properties: {}
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: get-urn-metadata
      description: |-
        Returns a list of model views (Viewables) in the source design specified by the `urn` URI parameter. It also returns the ID that uniquely identifies the model view. You can use this ID with other metadata endpoints to obtain information about the objects within model view.

        Most design applications like Fusion 360 and Inventor contain only one model view per design. However, some applications like Revit allow multiple model views (e.g., HVAC, architecture, perspective) per design.

        **Note:** You can retrieve metadata only from an input file that has been translated to SVF or SVF2.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - $ref: '#/components/parameters/accept-encoding'
        - schema:
            type: string
          in: query
          name: urn
          description: The Base64 (URL Safe) encoded design URN
  '/designdata/{urn}/metadata/{modelGuid}':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
      - name: modelGuid
        in: path
        required: true
        schema:
          type: string
        description: 'Unique model view ID. Call GET {urn}/metadata to get the ID'
    get:
      summary: Fetch Object tree
      tags:
        - Metadata
      operationId: get-urn-metadata-modelGuid
      description: |
        Returns a hierarchical list of objects (object tree) in the model view specified by the modelGuid URI parameter.

        Before you call this endpoint you must call GET {urn}/metadata to obtain the ID (modelGuid) of the model view you want to get the object tree of.

        Most design applications like Fusion 360 and Inventor contain only one model view per design. However, some applications like Revit allow multiple model views (e.g., HVAC, architecture, perspective) per design.

        Note You can retrieve metadata only from a design that has been translated to SVF or SVF2.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/x-ads-force'
        - $ref: '#/components/parameters/x-ads-derivative-format'
        - $ref: '#/components/parameters/forceget'
        - schema:
            type: integer
          in: query
          name: objectid
          description: 'If specified, retrieves the sub-tree that has the specified object ID as its parent node. If this parameter is not specified, retrieves the entire object tree.'
        - schema:
            type: string
          in: query
          name: level
          description: 'Specifies how many child levels of the hierarchy to return, when the objectid query string parameter is specified. Currently supports only level = 1.'
      responses:
        '200':
          description: Success
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
            x-ads-size:
              $ref: '#/components/headers/x-ads-size'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectTree'
        '202':
          description: Request accepted but processing not complete. Call this endpoint iteratively until a 200 is returned.
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '406':
          $ref: '#/components/responses/406-general'
        '409':
          $ref: '#/components/responses/409-general'
        '413':
          $ref: '#/components/responses/413-general'
        '429':
          $ref: '#/components/responses/429-general'
        '500':
          $ref: '#/components/responses/500-general'
  '/designdata/{urn}/metadata/{modelGuid}/properties':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
      - name: modelGuid
        in: path
        required: true
        schema:
          type: string
        description: 'Unique model view ID. Call GET {urn}/metadata to get the ID'
    get:
      summary: Fetch All Properties
      tags:
        - Metadata
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllProperties'
              examples:
                example-1:
                  value:
                    data:
                      type: string
                      collection:
                        - objectid: 0
                          name: string
                          externalId: string
                          properties:
                            Component Name: string
                            Name: string
                            Design Tracking Properties:
                              Design State: string
                              Designer: string
                              File Subtype: string
                            File Properties:
                              Author: string
                              Creation Date: string
                              Original System: string
                              Part Number: string
                            Mass Properties:
                              Area: string
                              Volume: string
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
            x-ads-size:
              $ref: '#/components/headers/x-ads-size'
        '202':
          description: 'Request accepted but processing not complete. Call this endpoint again, until getting 200 OK.'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  result:
                    type: string
                    minLength: 1
                required:
                  - result
                x-examples:
                  example-1:
                    result: success
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '406':
          $ref: '#/components/responses/406-general'
        '409':
          $ref: '#/components/responses/409-general'
        '413':
          $ref: '#/components/responses/413-general'
        '429':
          $ref: '#/components/responses/429-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: get-urn-metadata-modelGuid-properties
      description: |-
        Returns a list of properties of objects contained in the model view specified by the modelGuid URI parameter. This request returns all properties for all objects by default. However, you can use the objectid query string parameter to return all properties of a specified object.

        Properties are returned as a flat list ordered, by their objectid. The objectid is a non-persistent ID assigned to an object when a design file is translated to the SVF or SVF2 format. This means that:

        A design file must be translated to SVF or SVF2 before you can retrieve properties.
        The objectid of an object can change if the design is translated to SVF or SVF2 again. If you require a persistent ID to reference an object, use `externalId`.

        **Note**: Before you call this endpoint:

        Use the `GET {urn}/metadata` endpoint.
        Obtain the ID of the model view (Viewable) you want to check.
        Use the ID you obtained as the `modelGuid` URI parameter.

        **Note**: `POST {urn}/metadata/{modelGuid}/properties:query` provides greater flexibility to retrieve only the properties you are interested in. What’s more the response is paginated. So, when the number of properties returned is large, it can getz you the results faster.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/x-ads-force'
        - $ref: '#/components/parameters/x-ads-derivative-format'
        - schema:
            type: integer
          in: query
          name: objectid
          description: 'he Object ID of the object you want to query properties for.  If objectid is omitted, the server returns properties for all objects.'
        - $ref: '#/components/parameters/forceget'
  '/designdata/{urn}/metadata/{modelGuid}/properties:query':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
      - name: modelGuid
        in: path
        required: true
        schema:
          type: string
        description: 'Unique model view ID. Call GET {urn}/metadata to get the ID'
    post:
      summary: Fetch Specific Properties
      tags:
        - Metadata
      responses:
        '200':
          description: Success
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
            x-ads-size:
              $ref: '#/components/headers/x-ads-size'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecificProperties'
        '202':
          description: 'Request accepted but processing is not complete. Call this endpoint again, until you receive 200 OK.'
        '400':
          $ref: '#/components/responses/400-general'
        '404':
          $ref: '#/components/responses/404-general'
        '429':
          $ref: '#/components/responses/429-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: 'post-urn-metadata-modelGuid-properties:query'
      description: |-
        Queries the objects in the model view (Viewable) specified by the modelGuid URI parameter and returns the specified properties in a paginated list. You can limit the number of objects to be queried by specifying a filter in the request body.

        Before you call this endpoint use the `GET {urn}/metadata endpoint`, to obtain the IDs of the model views (Viewables) contained in the design. After that, specify the ID of the model view you want to query as the `modelGuid` URI parameter.

        **Note**: Before you query a model view for properties, the design must be translated to SVF or SVF2.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - $ref: '#/components/parameters/accept-encoding'
        - schema:
            type: string
          in: header
          name: Content-Type
          description: Must be `application/json`.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecificPropertiesPayload'
  '/designdata/{urn}/thumbnail':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
    get:
      summary: Downloads the thumbnail for the source file.
      tags:
        - Thumbnails
      responses:
        '200':
          description: Success
          headers:
            x-ads-name:
              schema:
                type: string
              description: Filename of the thumbnail
            x-ads-size:
              description: 'Thumbnail size. Possible values: [100,100], [200,200], [400,400]'
              schema:
                type: string
            x-ads-role:
              schema:
                type: string
                enum:
                  - rendered
                  - extracted
              description: 'The source of the thumbnail:  rendered: generated pursuant to this API call extracted: obtained from the original design file'
            x-ads-job-status:
              schema:
                type: string
                enum:
                  - inprogress
                  - success
                  - failed
                  - timedout
              description: 'The job status of current design  Possible values: inprogress, success, failed, timedout'
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
          content:
            application/json:
              schema:
                type: string
                description: The body response is a binary stream of the thumbnail.
            application/octet-stream:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
                properties: {}
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: get-urn-thumbnail
      description: Downloads the thumbnail for the source file.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - schema:
            type: integer
            enum:
              - 100
              - 200
              - 400
          in: query
          name: width
          description: 'Width of thumbnail  Possible values: 100, 200, 400  If width is omitted, but height is specified, the implicit value for width will match height.  If both width and height are omitted, the server will return a thumbnail closest to a width of 200, if available.'
        - schema:
            type: integer
            enum:
              - 100
              - 200
              - 400
          in: query
          name: height
          description: 'Height of thumbnail  Possible values: 100, 200, 400  If height is omitted, but width is specified, the implicit value for height will match width.  If both width and height are omitted, the server will return a thumbnail closest to a width of 200, if available.'
      x-ads_command_line_example:
        curl -X "GET" -H "Authorization: 'Bearer PtnrvrtSRpWwUi3407QhgvqdUVKL" -v "https://developer.api.autodesk.com/modelderivative/v2/designdata/dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6bW9kZWxkZXJpdmF0aXZlL0E1LnppcA/thumbnail"'
  '/designdata/{urn}/manifest/{derivativeUrn}/signedcookies':
    parameters:
      - name: derivativeUrn
        in: path
        schema:
          type: string
        description: 'The URL-encoded URN of the derivatives. The URN is retrieved from the GET {urn}/manifest endpoint.'
        required: true
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
    get:
      summary: Fetch Derivative Download URL
      tags:
        - Derivatives
      responses:
        '200':
          description: Success
          headers:
            Content-Type:
              schema:
                type: string
              description: application/octet-stream
            Content-Length:
              schema:
                type: string
              description: Denotes the size of the derivative in bytes.
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            Set-Cookie:
              schema:
                type: string
              description: Signed cookie to use with download URL. There will be three headers in the response named Set-Cookie
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    etag: be2a39d08bee2113ca39e64f5d7b9065
                    size: 4559
                    url: 'https://cdn.derivative.autodesk.com/dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6anAtMjIwNTIwL2JveC5pcHQ/output/225ba6fd-8516-460d-bb34-8bc85c09a79d/box.obj'
                    content-type: application/x-tgif
                    expiration: 1653565448973
                properties:
                  etag:
                    type: string
                    minLength: 1
                    description: 'The calculated ETag hash of the derivative/file, if available.'
                  size:
                    type: number
                    description: 'The size of the derivative/file, in bytes.'
                  url:
                    type: string
                    minLength: 1
                    description: The download URL.
                  content-type:
                    type: string
                    minLength: 1
                    description: The content type of the derivative/file.
                  expiration:
                    type: number
                    description: The 13-digit epoch time stamp indicating when the signed cookies expire.
                required:
                  - etag
                  - size
                  - url
                  - content-type
                  - expiration
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: '-derivativeurn-signedcookies'
      description: 'Returns a download URL and a set of signed cookies, which lets you securely download the derivative specified by the `derivativeUrn` URI parameter. The signed cookies have a lifetime of 6 hours. Although you cannot use range headers for this endpoint, you can use range headers for the returned download URL to download the derivative in chunks, in parallel.'
      parameters:
        - schema:
            type: integer
          in: query
          name: minutes-expiration
          description: 'Specifies how many minutes the signed cookies should remain valid. Default value is 360 minutes. The value you specify must be lower than the default value for this parameter. If you specify a value greater than the default value, the Model Derivative service will return an error with an HTTP status code of 400.'
        - schema:
            type: string
          in: query
          name: response-content-disposition
          description: The value that must be returned with the download URL as the response-content-disposition query string parameter. Must begin with attachment. This value defaults to the default value corresponding to the derivative/file.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
  '/designdata/{urn}/manifest/{derivativeUrn}':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
      - name: derivativeUrn
        in: path
        schema:
          type: string
        description: 'The URL-encoded URN of the derivatives. The URN is retrieved from the GET {urn}/manifest endpoint.'
        required: true
    head:
      summary: Check Derivative Details
      tags:
        - Derivatives
      responses:
        '200':
          description: Success
          headers:
            Content-Type:
              schema:
                type: string
              description: application/octet-stream
            Content-Length:
              schema:
                type: string
              description: Denotes the size of the specified derivative in bytes.
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
        '202':
          description: 'Request accepted but processing not complete. Call this endpoint again, until getting 200 OK.'
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: head-urn-manifest-derivativeUrn
      description: |-
        Returns information about the specified derivative.

        This endpoint returns a set of headers similar to that returned by the Get Derivative endpoint.

        You can use this endpoint to determine the total content length of a derivative before you download it using the Get Derivative endpoint. If the derivative is large, you can choose to download the derivative in chunks, by specifying a chunk size using the Range header parameter.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
  '/designdata/{urn}/manifest':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
    get:
      summary: Fetch Manifest
      tags:
        - Manifest
      responses:
        '200':
          description: Success
          headers:
            x-ads-app-identifier:
              schema:
                type: string
            x-ads-startup-time:
              schema:
                type: string
            x-ads-duration:
              schema:
                type: string
            x-ads-troubleshooting:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: get-urn-manifest
      description: |-
        Retrieves the manifest for the source design specified by the urn URI parameter. The manifest is a list containing information about the derivatives generated while translating a source file. The manifest contains information such as the URNs of the derivatives, the translation status of each derivative, and much more.

        The URNs of the derivatives are used to download the generated derivatives by calling the GET /{urn}/manifest/{derivativeurn} endpoint.

        Note: You cannot download 3D SVF2 derivatives.

        The statuses are used to check whether the translation of the requested output files is complete. The output files produced by a translation job may complete at different times. Therefore, each output file can have a different status.

        The first time you translate a source design, the Model Derivative service creates a manifest for that source design. Thereafter, every time you translate that source design, the Model Derivative service updates that manifest. It does not create a new manifest each time you initiate a translation job, even if you are translating to a different format.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - $ref: '#/components/parameters/accept-encoding'
    delete:
      summary: 'Deletes the manifest and all its translated output files (derivatives). However, it does not delete the design source file.'
      tags:
        - Manifest
      responses:
        '200':
          description: Success.
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: delete-urn-manifest
      description: |
        Deletes the manifest and all its translated output files (derivatives). However, it does not delete the design source file.
      security:
        - 2-legged:
            - 'data:write'
            - 'data:read'
        - 3-legged:
            - 'data:write'
            - 'data:read'
        - 3-legged-implicit:
            - 'data:write'
            - 'data:read'
  /designdata/job:
    post:
      summary: Start Translation Job
      tags:
        - Jobs
      responses:
        '200':
          description: Success
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '201':
          description: The requested file type has been previously generated and has not been replaced by the new source file.
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '406':
          $ref: '#/components/responses/406-general'
        '409':
          $ref: '#/components/responses/409-general'
        '429':
          $ref: '#/components/responses/429-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: post-job
      description: |-
        You can use this endpoint to do the following:

        Translate a design from one format to another format.
        Extract selected parts of a design and export the set of geometries in OBJ format.
        Generate different-sized thumbnails.
      security:
        - 2-legged:
            - 'data:read'
            - 'data:write'
            - 'data:create'
        - 3-legged:
            - 'data:read'
            - 'data:write'
            - 'data:create'
        - 3-legged-implicit:
            - 'data:read'
            - 'data:write'
            - 'data:create'
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: Must be application/json
        - $ref: '#/components/parameters/x-ads-force'
        - $ref: '#/components/parameters/x-ads-derivative-format'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPayload'
    parameters: []
  '/designdata/{urn}/references':
    post:
      summary: Specify References
      tags:
        - Jobs
      responses:
        '200':
          description: Success
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: reporting success status
                  urn:
                    type: string
                    description: the urn identifier of the source file
        '400':
          $ref: '#/components/responses/400-general'
        '401':
          $ref: '#/components/responses/401-general'
        '403':
          $ref: '#/components/responses/403-general'
        '404':
          $ref: '#/components/responses/404-general'
        '500':
          $ref: '#/components/responses/500-general'
      operationId: post-references
      description: 'To create references for a composite design in Model Derivative. The description of references is stored in Model Derivative. To use it with the POST job endpoint, you need to set checkReferences to true.'
      security:
        - 2-legged:
            - 'data:read'
            - 'data:write'
            - 'data:create'
        - 3-legged:
            - 'data:read'
            - 'data:write'
            - 'data:create'
        - 3-legged-implicit:
            - 'data:read'
            - 'data:write'
            - 'data:create'
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: Must be `application/json`
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  urn: 'urn:adsk.objects:os.object:modelderivative/A5.iam'
                  filename: A5.iam
                  references:
                    - urn: 'urn:adsk.objects:os.object:modelderivative/01.ipt'
                      relativePath: refs/01.ipt
                      filename: 01.ipt
                      references:
                        - urn: 'urn:adsk.objects:os.object:modelderivative/011.ipt'
                          relativePath: refs/subfolder/011.ipt
                    - urn: 'urn:adsk.objects:os.object:modelderivative/02.ipt'
                      relativePath: x-refs/02.ipt
                      filename: 02.ipt
                      metadata:
                        myField1: Some Data1
                        myField2: Some Data2
                        myField3: Some Data3
              properties:
                urn:
                  type: string
                  description: The root design urn. Mandatory if the base64 encoded urn in the request URL is a logical urn.
                region:
                  type: string
                  description: |
                    Region in which to store references. Possible values: US, EMEA. By default, it is set to US.
                  enum:
                    - US
                    - EMEA
                filename:
                  type: string
                  minLength: 1
                  description: 'The root design filename. By default, it is set to “” and the file will be download with its urn.'
                references:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  description: Group of references.
                  items:
                    type: object
                    description: An element of the array.
                    properties:
                      urn:
                        type: string
                        minLength: 1
                        description: The reference urn.
                      relativePath:
                        type: string
                        minLength: 1
                        description: 'The file path relative to the root design. By default, it is set to “”. It means the reference and its root file are in the same folder.'
                      filename:
                        type: string
                        minLength: 1
                        description: 'The reference filename. By default, it is set to “” and the reference will be downloaded with its urn and relativePath.'
                      metadata:
                        type: object
                        description: Custom metadata with key value pairs.
                    required:
                      - urn
                      - relativePath
                      - filename
              required:
                - urn
                - filename
                - references
    parameters:
      - $ref: '#/components/parameters/urn'
